{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Actor/Actor.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/Movie/Movie.js","components/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","concat","image","title","text","SearchBar","state","value","timeout","doSearch","event","searchValue","_this","setState","target","clearTimeout","setTimeout","this","lib_default","name","size","type","placeholder","onChange","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","_ref","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","_this$state","console","log","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","localStorage","setItem","JSON","stringify","backdrop_path","catch","error","getItem","parse","objectSpread","elements_HeroImage_HeroImage","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Actor","actor","profile_path","character","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Movie","actors","status_code","match","params","crew","filter","member","job","cast","elements_Navigation_Navigation","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","NotFound","App","basename","Fragment","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6dde1a76.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    //React.createElement('div', {className: \"head\"}, 'div'), this is how to create element with react plain js\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"rmdb-logo\"\r\n            src=\"./images/reactMovie_logo.png\"\r\n            alt=\"rmdb-logo\"\r\n          />\r\n        </Link>\r\n        <img\r\n          className=\"rmdb-tmdb-logo\"\r\n          src=\"./images/tmdb_logo.png\"\r\n          alt=\"rmdb-tmdb-logo\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\n// data\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"844dba0bfd8f3a4f3799f6130ef9e335\";\n\n// 019e8f375549e0bbd4a4191862ebc88f\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React from \"react\";\r\nimport \"./HeroImage.css\";\r\n\r\nconst HeroImage = (props) => {\r\n  return (\r\n    <div\r\n      className=\"rmdb-heroimage\"\r\n      style={{\r\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n        39%,rgba(0,0,0,0)\r\n        41%,rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${props.image}'), #1c1c1c`,\r\n      }}\r\n    >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n          <h2>{props.title}</h2>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroImage;\r\n","import React, { Component } from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n  // Must have this here so we can reset it\r\n  timeout = null;\r\n\r\n  doSearch = (event) => {\r\n    // ES6 Destructuring prop\r\n    const { searchValue } = this.props;\r\n\r\n    this.setState({ value: event.target.value });\r\n    clearTimeout(this.timeout);\r\n    // Set a timeout to wait for the user to stop writing\r\n    // So we don´t have to make unnessesary calls\r\n    this.timeout = setTimeout(() => {\r\n      searchValue(this.state.value);\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    // ES6 Destructuring state\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            value={value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./FourColGrid.css\";\r\n\r\n/*\r\nعاوز اخد الداتا بتاعة الافلام واحطها هنا عشان اظهره\r\n*/\r\n\r\nconst FourColGrid = (props) => {\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map((element, i) => {\r\n      return <div key={i}>{element}</div>;\r\n    });\r\n    return gridElements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MovieThumb.css\";\r\n\r\nconst MovieThumb = (props) => {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${props.movieId}`,\r\n            movieName: `${props.movieName}`,\r\n          }}\r\n          // هتسمع في Route/\r\n          // مليت حاجات الروت بالبروبس اللي مررتها من الهوووم\r\n        >\r\n          <img src={props.image} alt=\"moviethumb\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={props.image} alt=\"moviethumb\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React, { Component } from \"react\";\r\nimport \"./LoadMoreBtn.css\";\r\n\r\nconst LoadMoreBtn = ({ text, onClick }) => (\r\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\r\n    <p>{text}</p>\r\n  </div>\r\n);\r\nexport default LoadMoreBtn;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n} from \"../../config\";\r\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // local\r\n    if (localStorage.getItem(\"HomeState\")) {\r\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\r\n      this.setState({ ...state });\r\n    } else {\r\n      // after load finished > > > fetch\r\n      // we want to get data from api and put it in state\r\n      this.setState({ loading: true });\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      // clear movies to add the movies you have serached for instead\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm,\r\n    });\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  // will trigger when you press load more items\r\n  loadMoreItems = () => {\r\n    const { searchTerm, currentPage } = this.state;\r\n    console.log(\"done\");\r\n    let endpoint = \"\";\r\n    this.setState({ loading: true });\r\n\r\n    // not understanded\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\r\n        currentPage + 1\r\n      }`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${\r\n        currentPage + 1\r\n      }`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        this.setState(\r\n          {\r\n            // put movies/heroImg in state\r\n            movies: [...this.state.movies, ...result.results],\r\n            HeroImage: this.state.heroImage || result.results[0],\r\n            loading: false,\r\n            // stop loading after you get data\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages,\r\n          },\r\n          () => {\r\n            // ما تعملش لما اسرش\r\n            if (this.state.searchTerm === \"\") {\r\n              localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\r\n            }\r\n          }\r\n        );\r\n        console.log(this.state.HeroImage.backdrop_path);\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // scaffolder.. skelton\r\n      <div className=\"rmdb-home\">\r\n        {this.state.HeroImage ? (\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.HeroImage.backdrop_path}`}\r\n              title={this.state.HeroImage.original_title}\r\n              text={this.state.HeroImage.overview}\r\n            />\r\n            <SearchBar searchValue={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid\r\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\r\n            loading={this.state.loading}\r\n          >\r\n            {this.state.movies.map((element, i) => (\r\n              <MovieThumb\r\n                key={i}\r\n                clickable={true}\r\n                image={\r\n                  element.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                    : \"./images/no_image.jpg\"\r\n                }\r\n                movieId={element.id}\r\n                movieName={element.original_title}\r\n              />\r\n            ))}\r\n          </FourColGrid>\r\n          {this.state.loading ? <Spinner /> : null}\r\n          {this.state.currentPage <= this.state.totalPages &&\r\n          !this.state.loading ? (\r\n            <LoadMoreBtn text=\"load more\" onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// turnary if with {()} >> when you have 2 statements\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../../config\";\r\nimport \"./Actor.css\";\r\n\r\n// small size\r\nconst POSTER_SIZE = \"w154\";\r\n\r\nconst Actor = (props) => {\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : \"./images/no_image.jpg\"\r\n        }\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie.original_title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport \"./MovieInfo.css\";\r\nimport { element } from \"prop-types\";\r\n\r\nconst MovieInfo = (props) => {\r\n  return (\r\n    <div\r\n      className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path\r\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\r\n          : \"#000\",\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              props.movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\r\n                : \"./images/no_image.jpg\"\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h2>{props.movie.original_title}</h2>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter\r\n              min=\"0\"\r\n              max=\"100\"\r\n              optimum=\"100\"\r\n              low=\"40\"\r\n              high=\"70\"\r\n              value={props.movie.vote_average}\r\n            ></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {props.directors.map((element, i) => {\r\n            return (\r\n              <p key={i} className=\"rmdb-director\">\r\n                {element.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from \"react\";\r\nimport { calcTime, convertMoney } from \"../../../helpers\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nconst MovieInfoBar = (props) => {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Running time: {calcTime(props.time)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Budget: {convertMoney(props.budget)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Revenue: {convertMoney(props.revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import React, { Component } from \"react\";\r\nimport Actor from \"../elements/Actor/Actor\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends Component {\r\n  // هاخد داتا يبقى احفظها في state\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n      const state = JSON.parse(localStorage.getItem(\"MoveState\"));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      // first fetch the movie you have clicked on\r\n      let endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        // means if there is ala2\r\n        if (result.status_code) {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        } else {\r\n          console.log(result);\r\n          this.setState(\r\n            {\r\n              movie: result,\r\n            },\r\n            // we'll need to fetch again to get actors, this will happen as callback funciton after you put result to movie\r\n            () => {\r\n              // this how we get props from from Link\r\n              const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}&language=en-US`;\r\n              // data if the movie i clicked\r\n              console.log(this.props);\r\n\r\n              fetch(endpoint)\r\n                .then((result) => result.json())\r\n                .then((result) => {\r\n                  const directors = result.crew.filter(\r\n                    (member) => member.job === \"Director\"\r\n                  );\r\n                  this.setState(\r\n                    {\r\n                      actors: result.cast,\r\n                      directors,\r\n                      loading: false,\r\n                    },\r\n                    () => {\r\n                      localStorage.setItem(\r\n                        `${this.props.match.params.movieId}`,\r\n                        JSON.stringify(this.state)\r\n                      );\r\n                    }\r\n                  );\r\n                  console.log(result);\r\n                });\r\n            }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Navigation movie={this.state.movie} />\r\n            <MovieInfo\r\n              movie={this.state.movie}\r\n              directors={this.state.directors}\r\n            />\r\n            <MovieInfoBar\r\n              time={this.state.runtime}\r\n              budget={this.state.budget}\r\n              revenue={this.state.revenue}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {this.state.actors ? (\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={\"actors\"}>\r\n              {this.state.actors.map((element, i) => {\r\n                return <Actor key={i} actor={element} />;\r\n              })}\r\n            </FourColGrid>\r\n          </div>\r\n        ) : null}\r\n        {!this.state.actors && this.state.loading ? (\r\n          <h1>no movie found</h1>\r\n        ) : null}\r\n        {this.state.loading ? <Spinner /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1> ops page is not found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"../elements/Header/Header\";\nimport Home from \"../Home/Home\";\nimport Movie from \"../Movie/Movie\";\nimport NotFound from \"../NotFound/NotFound\";\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/Movie-App/\">\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/:movieId\" component={Movie} />\n          <Route component={NotFound} />\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n};\n// path will be in props.history.match.path\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}